// <auto-generated />
using System;
using CMS.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240501230143_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Web.Models.Entities.Company", b =>
                {
                    b.Property<Guid>("CompID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CMS.Web.Models.Entities.Department", b =>
                {
                    b.Property<Guid>("DepID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepID");

                    b.HasIndex("CompID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CMS.Web.Models.Entities.Employee", b =>
                {
                    b.Property<Guid>("EmpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmpID");

                    b.HasIndex("CompID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CMS.Web.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("ProdID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ProdID");

                    b.HasIndex("CompID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CMS.Web.Models.Entities.Department", b =>
                {
                    b.HasOne("CMS.Web.Models.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CMS.Web.Models.Entities.Employee", b =>
                {
                    b.HasOne("CMS.Web.Models.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CMS.Web.Models.Entities.Product", b =>
                {
                    b.HasOne("CMS.Web.Models.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
